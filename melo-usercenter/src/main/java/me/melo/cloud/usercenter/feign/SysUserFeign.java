package me.melo.cloud.usercenter.feign;import io.swagger.annotations.Api;import lombok.RequiredArgsConstructor;import me.melo.cloud.common.result.Result;import me.melo.cloud.usercenter.dto.CreateUserDTO;import me.melo.cloud.usercenter.entity.SysUser;import me.melo.cloud.usercenter.entity.UserInfo;import me.melo.cloud.usercenter.service.ISysUserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.cloud.context.config.annotation.RefreshScope;import org.springframework.web.bind.annotation.*;@RestController@RequestMapping(value = "/feign/user")@RequiredArgsConstructor(onConstructor_ = @Autowired)@Api(value = "SysUserFeign|提供微服务调用接口")@RefreshScopepublic class SysUserFeign {    private final ISysUserService sysUserService;    @GetMapping("/query/by/id")    public Result<Object> queryById(@RequestParam("id") Long id) {        SysUser sysUser = new SysUser();        sysUser.setId(id);        UserInfo userInfo = sysUserService.queryUserInfo(sysUser);        return Result.data(userInfo);    }    @GetMapping("/query/by/phone")    public Result<Object> queryUserByPhone(@RequestParam("phoneNumber") String phoneNumber) {        SysUser sysUser = new SysUser();        sysUser.setMobile(phoneNumber);        UserInfo userInfo = sysUserService.queryUserInfo(sysUser);        return Result.data(userInfo);    }    @GetMapping("/query/by/account")    public Result<Object> queryUserByAccount(@RequestParam("account") String account) {        SysUser sysUser = new SysUser();        sysUser.setAccount(account);        UserInfo userInfo = sysUserService.queryUserInfo(sysUser);        return Result.data(userInfo);    }    @GetMapping("/query/by/openid")    public Result<Object> queryUserByOpenId(@RequestParam("openid") String openid) {        SysUser sysUser = new SysUser();        UserInfo userInfo = sysUserService.queryUserInfo(sysUser);        return Result.data(userInfo);    }    @PostMapping("/add")    public Result<Object> userAdd(@RequestBody CreateUserDTO createUserDTO) {        CreateUserDTO userDTO = sysUserService.createUser(createUserDTO);        return Result.data(userDTO.getId());    }}